eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIGJ1aWxkOgogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgaW1hZ2U6IGRvY2tlcgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBidWlsZCAtdCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvdGYtdGVzdHJ1bm5lcjoke0RST05FX0NPTU1JVF9TSEF9IC4KCiAgaW1hZ2VfdG9fcXVheToKICAgIGltYWdlOiBkb2NrZXIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InVraG9tZW9mZmljZWRpZ2l0YWwrdGZ0ZXN0cnVubmVyIiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC90Zi10ZXN0cnVubmVyOiR7RFJPTkVfQ09NTUlUX1NIQX0KCiAgdGFnX2FzX2xhdGVzdF9xdWF5OgogICAgaW1hZ2U6IGRvY2tlcgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCt0ZnRlc3RydW5uZXIiIC1wPSR7RE9DS0VSX1BBU1NXT1JEfSBxdWF5LmlvCiAgICAgIC0gZG9ja2VyIHRhZyBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvdGYtdGVzdHJ1bm5lcjoke0RST05FX0NPTU1JVF9TSEF9IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC90Zi10ZXN0cnVubmVyOmxhdGVzdAogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC90Zi10ZXN0cnVubmVyOmxhdGVzdAogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAgZXZlbnQ6IHB1c2gKCnNlcnZpY2VzOgogIGRpbmQ6CiAgICBpbWFnZTogZG9ja2VyOmRpbmQKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGNvbW1hbmQ6CiAgICAgIC0gIi1zIgogICAgICAtICJvdmVybGF5Igo.LEpRftt_-Qk3fGdQlfuC9wNO1BICwkC9gOa5sqKsIoQ